// <auto-generated />
using System;
using CoronaWeb.CoronaDb;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoronaWeb.Migrations
{
    [DbContext(typeof(CoronaDbContext))]
    [Migration("20200331144836_ijnj")]
    partial class ijnj
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CoronaWeb.Models.CountryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Flag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatisticsModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StatisticsModelId");

                    b.ToTable("CountryModels");
                });

            modelBuilder.Entity("CoronaWeb.Models.DiseaseModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DiseaseModels");
                });

            modelBuilder.Entity("CoronaWeb.Models.LocationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<double>("Speed")
                        .HasColumnType("float");

                    b.Property<int>("UserModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId");

                    b.ToTable("LocationModels");
                });

            modelBuilder.Entity("CoronaWeb.Models.MedicalStateModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BloodType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiseaseModelId")
                        .HasColumnType("int");

                    b.Property<int>("UserModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DiseaseModelId");

                    b.HasIndex("UserModelId");

                    b.ToTable("MedicalStateModels");
                });

            modelBuilder.Entity("CoronaWeb.Models.NewsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NewsSourceModelId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NewsSourceModelId");

                    b.ToTable("NewsModels");
                });

            modelBuilder.Entity("CoronaWeb.Models.NewsSourceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryModelId")
                        .HasColumnType("int");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryModelId");

                    b.ToTable("NewsSourceModels");
                });

            modelBuilder.Entity("CoronaWeb.Models.SOSModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryModelId")
                        .HasColumnType("int");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.Property<int?>("SOSModel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SOSModel");

                    b.ToTable("SOSModels");
                });

            modelBuilder.Entity("CoronaWeb.Models.StatisticsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryModelId")
                        .HasColumnType("int");

                    b.Property<double>("Cured")
                        .HasColumnType("float");

                    b.Property<double>("Dead")
                        .HasColumnType("float");

                    b.Property<double>("Infected")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("StatisticsModels");
                });

            modelBuilder.Entity("CoronaWeb.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("CountryModelId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InfictionStatus")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserModel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserModel");

                    b.ToTable("UserModels");
                });

            modelBuilder.Entity("CoronaWeb.Models.CountryModel", b =>
                {
                    b.HasOne("CoronaWeb.Models.StatisticsModel", "StatisticsModel")
                        .WithMany()
                        .HasForeignKey("StatisticsModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CoronaWeb.Models.LocationModel", b =>
                {
                    b.HasOne("CoronaWeb.Models.UserModel", "UserModel")
                        .WithMany("LocationModels")
                        .HasForeignKey("UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CoronaWeb.Models.MedicalStateModel", b =>
                {
                    b.HasOne("CoronaWeb.Models.DiseaseModel", "DiseaseModel")
                        .WithMany("MedicalStateModels")
                        .HasForeignKey("DiseaseModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoronaWeb.Models.UserModel", "UserModel")
                        .WithMany("MedicalStateModels")
                        .HasForeignKey("UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CoronaWeb.Models.NewsModel", b =>
                {
                    b.HasOne("CoronaWeb.Models.NewsSourceModel", "NewsSourceModel")
                        .WithMany("NewsModels")
                        .HasForeignKey("NewsSourceModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CoronaWeb.Models.NewsSourceModel", b =>
                {
                    b.HasOne("CoronaWeb.Models.CountryModel", "CountryModel")
                        .WithMany("NewsSourceModels")
                        .HasForeignKey("CountryModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CoronaWeb.Models.SOSModel", b =>
                {
                    b.HasOne("CoronaWeb.Models.CountryModel", null)
                        .WithMany("SOSModels")
                        .HasForeignKey("SOSModel");
                });

            modelBuilder.Entity("CoronaWeb.Models.UserModel", b =>
                {
                    b.HasOne("CoronaWeb.Models.CountryModel", null)
                        .WithMany("UserModels")
                        .HasForeignKey("UserModel");
                });
#pragma warning restore 612, 618
        }
    }
}
